[pytest]
# Pytest configuration for Void Bot testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for API interactions
    e2e: End-to-end tests for complete workflows
    slow: Tests that take a long time to run
    api: Tests that require external API access
    mock: Tests that use mocked external services
    bluesky: Tests specific to Bluesky functionality
    x: Tests specific to X (Twitter) functionality
    letta: Tests specific to Letta integration
    config: Tests for configuration management
    queue: Tests for queue management
    memory: Tests for memory management
    tools: Tests for tool functionality

# Filtering options
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.packages.urllib3
    ignore::UserWarning:urllib3

# Minimum version requirements
minversion = 7.0

# Parallel execution
# Use: pytest -n auto for parallel execution
# Use: pytest -n 0 for sequential execution

# Coverage configuration
[coverage:run]
source = .
omit = 
    tests/*
    venv/*
    .venv/*
    */migrations/*
    */venv/*
    setup.py
    conftest.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
